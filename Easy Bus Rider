
# Write your code here
import json
import string
import re

n = 1
faulty_buss_dict =  {
        "bus_id": 0,
        "stop_id": 0,
        "stop_name": 0,
        "next_stop": 0,
        "stop_type": 0,
        "a_time": 0
    }
stop_count_dict = {0:{
              "times": 0}}
unique_start_stops = []
unique_end_stops = []
unique_transfer_stops = []
real_tranfer_stops = []
buss_dict = {}
incorrect_time = {}
json_str = '[{"bus_id" : 128, "stop_id" : 1, "stop_name" : "Prospekt Avenue", "next_stop" : 3, "stop_type" : "S", "a_time" : "08:12"}, {"bus_id" : 128, "stop_id" : 3, "stop_name" : "Elm Street", "next_stop" : 5, "stop_type" : "O", "a_time" : "08:19"}, {"bus_id" : 128, "stop_id" : 5, "stop_name" : "Fifth Avenue", "next_stop" : 7, "stop_type" : "O", "a_time" : "08:25"}, {"bus_id" : 128, "stop_id" : 7, "stop_name" : "Sesame Street", "next_stop" : 0, "stop_type" : "F", "a_time" : "08:37"}, {"bus_id" : 256, "stop_id" : 2, "stop_name" : "Pilotow Street", "next_stop" : 3, "stop_type" : "S", "a_time" : "09:20"}, {"bus_id" : 256, "stop_id" : 3, "stop_name" : "Elm Street", "next_stop" : 6, "stop_type" : "", "a_time" : "09:45"}, {"bus_id" : 256, "stop_id" : 6, "stop_name" : "Abbey Road", "next_stop" : 7, "stop_type" : "O", "a_time" : "09:59"}, {"bus_id" : 256, "stop_id" : 7, "stop_name" : "Sesame Street", "next_stop" : 0, "stop_type" : "F", "a_time" : "10:12"}, {"bus_id" : 512, "stop_id" : 4, "stop_name" : "Bourbon Street", "next_stop" : 6, "stop_type" : "S", "a_time" : "08:13"}, {"bus_id" : 512, "stop_id" : 6, "stop_name" : "Abbey Road", "next_stop" : 0, "stop_type" : "F", "a_time" : "08:16"}]'
wrong_stop_type = []
temp_list = json.loads(json_str)
name_template = re.compile(r'''^[A-Z]{1}.*                      # street prefix
(Street|Road|Boulevard|Avenue)                                  # street suffix
\Z                                                              # and nothing more
''', flags=re.VERBOSE)
for i in temp_list:
        if i['bus_id'] in buss_dict:
            if i['stop_type'] in 'SOF' or i['stop_type'] == '':
                v = list(buss_dict[i['bus_id']].keys())[-1]
                buss_dict[i['bus_id']].update({v + 1:{"stop_id":i["stop_id"], "stop_name": i["stop_name"],
                        "next_stop": i["next_stop"], "stop_type":i["stop_type"], "a_time":i["a_time"]}})

        else:
            buss_dict.update({i['bus_id']: {1: {"stop_id": i["stop_id"], "stop_name": i["stop_name"],
                    "next_stop": i["next_stop"], "stop_type": i["stop_type"],"a_time": i["a_time"]}}})


for id in buss_dict:
    s, f = 0, 0
    curr_stop_time = '0'

    for v in buss_dict[id]:

        if buss_dict[id][v]['a_time'] > curr_stop_time:
            curr_stop_time = buss_dict[id][v]['a_time']
        else:
            incorrect_time.update({id:buss_dict[id][v]['stop_name']})
            break
        if buss_dict[id][v]['stop_type'] == 'S':
            s = 1
            if buss_dict[id][v]['stop_name'] in unique_transfer_stops or \
                buss_dict[id][v]['stop_name'] in unique_start_stops or buss_dict[id][v]['stop_name'] in unique_end_stops:
                if buss_dict[id][v]['stop_name'] not in real_tranfer_stops:
                    real_tranfer_stops.append(buss_dict[id][v]['stop_name'])
                else:
                    pass
            else:
                unique_start_stops.append(buss_dict[id][v]['stop_name'])
            if buss_dict[id][v]['stop_name'] in unique_start_stops:
                pass
            else:
                unique_start_stops.append(buss_dict[id][v]['stop_name'])

        elif buss_dict[id][v]['stop_type'] == 'F':
            f = 1
            if buss_dict[id][v]['stop_name'] in unique_transfer_stops or \
                buss_dict[id][v]['stop_name'] in unique_start_stops or buss_dict[id][v]['stop_name'] in unique_end_stops:
                if buss_dict[id][v]['stop_name'] not in real_tranfer_stops:
                    real_tranfer_stops.append(buss_dict[id][v]['stop_name'])
            if buss_dict[id][v]['stop_name'] in unique_end_stops:
                pass
            else:
                unique_end_stops.append(buss_dict[id][v]['stop_name'])

        else:
            if buss_dict[id][v]['stop_name'] in unique_transfer_stops or buss_dict[id][v]['stop_name'] \
                    in unique_start_stops or buss_dict[id][v]['stop_name'] in unique_end_stops:
                if buss_dict[id][v]['stop_name'] not in real_tranfer_stops:
                    real_tranfer_stops.append(buss_dict[id][v]['stop_name'])
                else:
                    pass
            else:
                unique_transfer_stops.append(buss_dict[id][v]['stop_name'])

    if s == 0 or f == 0:
        print(f'There is incorrectly marked stop. Take a closer look at the line {id}....')
        exit()


for id in buss_dict:
    for v in buss_dict[id]:
        if buss_dict[id][v]['stop_type'] == 'O' and buss_dict[id][v]['stop_name'] in real_tranfer_stops:
            wrong_stop_type.append(buss_dict[id][v]['stop_name'])
        else:
            pass

wrong_stop_type.sort()
print('On demand stops test')
if wrong_stop_type:
    print('Wrong stop type:', wrong_stop_type)
else:
    print('OK')

"""print('Arrival time test:')
if incorrect_time:
    for k, v in incorrect_time.items():
        print(f'bus_id line {k}: wrong time on station {v}')
else:
    print('Ok')"""

"""unique_start_stops.sort()
unique_end_stops.sort()
unique_transfer_stops.sort()
real_tranfer_stops.sort()

print(f'Start stops: {len(unique_start_stops)}', unique_start_stops, f'\nTransfer stops: {len(real_tranfer_stops)}',
      real_tranfer_stops, f'\nFinish stops: {len(unique_end_stops)}', unique_end_stops)"""
